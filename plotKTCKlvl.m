clear all
clc

load xOptimal.mat
load noiseParaKlvl.mat

x1R = x_max_f(1);
x1I = x_max_f(2);
x2R = x_max_f(3);
x2I = x_max_f(4);
x3R = x_max_f(5);
x3I = x_max_f(6);
x4R = x_max_f(7);
x4I = x_max_f(8);
x5R = x_max_f(9);
x5I = x_max_f(10);
x6R = x_max_f(11);
x6I = x_max_f(12);
x7R = x_max_f(13);
x7I = x_max_f(14);
x8R = x_max_f(15);
x8I = x_max_f(16);
x9R = x_max_f(17);
x9I = x_max_f(18);
px1 = x_max_f(19);
px2 = x_max_f(20);
px3 = x_max_f(21);
px4 = x_max_f(22);
px5 = x_max_f(23);
px6 = x_max_f(24);
px7 = x_max_f(25);
px8 = x_max_f(26);
px9 = x_max_f(27);

x1 = x1R + 1j*x1I;
x2 = x2R + 1j*x2I;
x3 = x3R + 1j*x3I;
x4 = x4R + 1j*x4I;
x5 = x5R + 1j*x5I;
x6 = x6R + 1j*x6I;
x7 = x7R + 1j*x7I;
x8 = x8R + 1j*x8I;
x9 = x9R + 1j*x9I;

py11 = px1*W11(x1R+1j*x1I) + ...
       px2*W11(x2R+1j*x2I) + ...
       px3*W11(x3R+1j*x3I) + ...
       px4*W11(x4R+1j*x4I) + ...
       px5*W11(x5R+1j*x5I) + ...
       px6*W11(x6R+1j*x6I) + ...
       px7*W11(x7R+1j*x7I) + ...
       px8*W11(x8R+1j*x8I) + ...
       px9*W11(x9R+1j*x9I);
   
py12 = px1*W12(x1R+1j*x1I) + ...
       px2*W12(x2R+1j*x2I) + ...
       px3*W12(x3R+1j*x3I) + ...
       px4*W12(x4R+1j*x4I) + ...
       px5*W12(x5R+1j*x5I) + ...
       px6*W12(x6R+1j*x6I) + ...
       px7*W12(x7R+1j*x7I) + ...
       px8*W12(x8R+1j*x8I) + ...
       px9*W12(x9R+1j*x9I);
   
py13 = px1*W13(x1R+1j*x1I) + ...
       px2*W13(x2R+1j*x2I) + ...
       px3*W13(x3R+1j*x3I) + ...
       px4*W13(x4R+1j*x4I) + ...
       px5*W13(x5R+1j*x5I) + ...
       px6*W13(x6R+1j*x6I) + ...
       px7*W13(x7R+1j*x7I) + ...
       px8*W13(x8R+1j*x8I) + ...
       px9*W13(x9R+1j*x9I);
   
py21 = px1*W21(x1R+1j*x1I) + ...
       px2*W21(x2R+1j*x2I) + ...
       px3*W21(x3R+1j*x3I) + ...
       px4*W21(x4R+1j*x4I) + ...
       px5*W21(x5R+1j*x5I) + ...
       px6*W21(x6R+1j*x6I) + ...
       px7*W21(x7R+1j*x7I) + ...
       px8*W21(x8R+1j*x8I) + ...
       px9*W21(x9R+1j*x9I);
   
py22 = px1*W22(x1R+1j*x1I) + ...
       px2*W22(x2R+1j*x2I) + ...
       px3*W22(x3R+1j*x3I) + ...
       px4*W22(x4R+1j*x4I) + ...
       px5*W22(x5R+1j*x5I) + ...
       px6*W22(x6R+1j*x6I) + ...
       px7*W22(x7R+1j*x7I) + ...
       px8*W22(x8R+1j*x8I) + ...
       px9*W22(x9R+1j*x9I);

py23 = px1*W23(x1R+1j*x1I) + ...
       px2*W23(x2R+1j*x2I) + ...
       px3*W23(x3R+1j*x3I) + ...
       px4*W23(x4R+1j*x4I) + ...
       px5*W23(x5R+1j*x5I) + ...
       px6*W23(x6R+1j*x6I) + ...
       px7*W23(x7R+1j*x7I) + ...
       px8*W23(x8R+1j*x8I) + ...
       px9*W23(x9R+1j*x9I);
   
py31 = px1*W31(x1R+1j*x1I) + ...
       px2*W31(x2R+1j*x2I) + ...
       px3*W31(x3R+1j*x3I) + ...
       px4*W31(x4R+1j*x4I) + ...
       px5*W31(x5R+1j*x5I) + ...
       px6*W31(x6R+1j*x6I) + ...
       px7*W31(x7R+1j*x7I) + ...
       px8*W31(x8R+1j*x8I) + ...
       px9*W31(x9R+1j*x9I);   
   
py32 = px1*W32(x1R+1j*x1I) + ...
       px2*W32(x2R+1j*x2I) + ...
       px3*W32(x3R+1j*x3I) + ...
       px4*W32(x4R+1j*x4I) + ...
       px5*W32(x5R+1j*x5I) + ...
       px6*W32(x6R+1j*x6I) + ...
       px7*W32(x7R+1j*x7I) + ...
       px8*W32(x8R+1j*x8I) + ...
       px9*W32(x9R+1j*x9I);   
   
py33 = px1*W33(x1R+1j*x1I) + ...
       px2*W33(x2R+1j*x2I) + ...
       px3*W33(x3R+1j*x3I) + ...
       px4*W33(x4R+1j*x4I) + ...
       px5*W33(x5R+1j*x5I) + ...
       px6*W33(x6R+1j*x6I) + ...
       px7*W33(x7R+1j*x7I) + ...
       px8*W33(x8R+1j*x8I) + ...
       px9*W33(x9R+1j*x9I);

C = -fval;

S1 = W11(x1)*log(W11(x1)/py11) + ...
     W12(x1)*log(W12(x1)/py12) + ...
     W13(x1)*log(W13(x1)/py13) + ...
     W21(x1)*log(W21(x1)/py21) + ...
     W22(x1)*log(W22(x1)/py22) + ...
     W23(x1)*log(W23(x1)/py23) + ...
     W31(x1)*log(W31(x1)/py31) + ...
     W32(x1)*log(W32(x1)/py32) + ...
     W33(x1)*log(W33(x1)/py33) ;
 
% S3 = W11(x3)*log(W11(x3)/py11) + ...
%      W12(x3)*log(W12(x3)/py12) + ...
%      W13(x3)*log(W13(x3)/py13) + ...
%      W21(x3)*log(W21(x3)/py21) + ...
%      W22(x3)*log(W22(x3)/py22) + ...
%      W23(x3)*log(W23(x3)/py23) + ...
%      W31(x3)*log(W31(x3)/py31) + ...
%      W32(x3)*log(W32(x3)/py32) + ...
%      W33(x3)*log(W33(x3)/py33) ;
%  
% S5 = W11(x5)*log(W11(x5)/py11) + ...
%      W12(x5)*log(W12(x5)/py12) + ...
%      W13(x5)*log(W13(x5)/py13) + ...
%      W21(x5)*log(W21(x5)/py21) + ...
%      W22(x5)*log(W22(x5)/py22) + ...
%      W23(x5)*log(W23(x5)/py23) + ...
%      W31(x5)*log(W31(x5)/py31) + ...
%      W32(x5)*log(W32(x5)/py32) + ...
%      W33(x5)*log(W33(x5)/py33) ; 

mu1 = (C - S1)/(TotalPower-abs(x1)^2);

% mu3 = (C - S3)/(TotalPower-abs(x3)^2);
% 
% mu5 = (C - S5)/(TotalPower-abs(x5)^2);

Rc = -5:0.05:5;
Ic = Rc;
ktc = zeros(length(Rc),length(Ic));

for rc = 1:length(Rc)
    for ic = 1:length(Ic)
        xc = Rc(rc) + 1j*Ic(ic);
        
        S = W11(xc)*log(W11(xc)/py11) + ...
            W12(xc)*log(W12(xc)/py12) + ...
            W13(xc)*log(W13(xc)/py13) + ...
            W21(xc)*log(W21(xc)/py21) + ...
            W22(xc)*log(W22(xc)/py22) + ...
            W23(xc)*log(W23(xc)/py23) + ...
            W31(xc)*log(W31(xc)/py31) + ...
            W32(xc)*log(W32(xc)/py32) + ...
            W33(xc)*log(W33(xc)/py33) ;
        
        ktc(rc,ic) = S - mu1*(abs(xc)^2 - TotalPower) - C;
    end
end

surf(Rc,Ic,ktc)

